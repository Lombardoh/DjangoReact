{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\WebPages\\\\dev\\\\Tweetme2\\\\tweetme2-web\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tweets, setTweets] = useState([{\n    content: 123\n  }]);\n  useEffect(() => {\n    const tweetsItems = [{\n      \"content\": 123\n    }, {\n      \"content\": 123\n    }];\n    setTweets(tweetsItems);\n  }, []);\n\n  function loadTweets(callback) {\n    const xhr = new XMLHttpRequest();\n    const method = 'GET';\n    const url = \"/tweets\";\n    const responseType = \"json\";\n    xhr.responseType = responseType;\n    xhr.open(method, url);\n\n    xhr.onload = function () {\n      const serverResponse = xhr.response;\n      let listedItems = serverResponse;\n      let finalTweetStr = \"\";\n      let i;\n\n      for (i = 0; i < listedItems.length; i++) {\n        let tweetObj = listedItems[i];\n        let currentItem = formatTweetEleemnt(tweetObj);\n        finalTweetStr += currentItem;\n      }\n\n      tweetsElement.innerHTML = finalTweetStr;\n    };\n\n    xhr.send();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tweets.map((tweet, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: tweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hola\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DAbVbhM8ge1E7r29jHSTnfViy54=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Projects/WebPages/dev/Tweetme2/tweetme2-web/src/App.js"],"names":["React","useEffect","useState","App","tweets","setTweets","content","tweetsItems","loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","serverResponse","response","listedItems","finalTweetStr","i","length","tweetObj","currentItem","formatTweetEleemnt","tweetsElement","innerHTML","send","logo","map","tweet","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAC;AAACI,IAAAA,OAAO,EAAE;AAAV,GAAD,CAAD,CAApC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,WAAW,GAAG,CAAC;AAAC,iBAAU;AAAX,KAAD,EAAiB;AAAC,iBAAU;AAAX,KAAjB,CAApB;AACAF,IAAAA,SAAS,CAACE,WAAD,CAAT;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACA,UAAMC,MAAM,GAAG,KAAf;AACA,UAAMC,GAAG,GAAG,SAAZ;AACA,UAAMC,YAAY,GAAG,MAArB;AAEAJ,IAAAA,GAAG,CAACI,YAAJ,GAAmBA,YAAnB;AACAJ,IAAAA,GAAG,CAACK,IAAJ,CAASH,MAAT,EAAiBC,GAAjB;;AAEAH,IAAAA,GAAG,CAACM,MAAJ,GAAa,YAAY;AACrB,YAAMC,cAAc,GAAGP,GAAG,CAACQ,QAA3B;AACA,UAAIC,WAAW,GAAGF,cAAlB;AACA,UAAIG,aAAa,GAAG,EAApB;AACA,UAAIC,CAAJ;;AAEA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,WAAW,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAIE,QAAQ,GAAGJ,WAAW,CAACE,CAAD,CAA1B;AACA,YAAIG,WAAW,GAAGC,kBAAkB,CAACF,QAAD,CAApC;AACAH,QAAAA,aAAa,IAAII,WAAjB;AACH;;AACDE,MAAAA,aAAa,CAACC,SAAd,GAA0BP,aAA1B;AACH,KAZD;;AAcAV,IAAAA,GAAG,CAACkB,IAAJ;AACH;;AAEC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,kBACCzB,MAAM,CAAC0B,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAiB;AACzB,8BAAO;AAAA,sBAAKD,KAAK,CAACzB;AAAX;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFF;AADD;AAAA;AAAA;AAAA;AAAA,cALF,eAUE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA,+BAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAzDQH,G;;KAAAA,G;AA2DT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [tweets, setTweets] = useState([{content: 123}])\n\n  useEffect(() => {\n    const tweetsItems = [{\"content\":123},{\"content\":123}]\n    setTweets(tweetsItems)\n  }, [])\n\n  function loadTweets(callback) {\n    const xhr = new XMLHttpRequest()\n    const method = 'GET'\n    const url = \"/tweets\"\n    const responseType = \"json\"\n\n    xhr.responseType = responseType\n    xhr.open(method, url)\n\n    xhr.onload = function () {\n        const serverResponse = xhr.response\n        let listedItems = serverResponse\n        let finalTweetStr = \"\";\n        let i;\n\n        for (i = 0; i < listedItems.length; i++) {\n            let tweetObj = listedItems[i]\n            let currentItem = formatTweetEleemnt(tweetObj)\n            finalTweetStr += currentItem\n        }\n        tweetsElement.innerHTML = finalTweetStr\n    }\n\n    xhr.send()\n}\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <p>\n        {tweets.map((tweet, index) =>{\n            return <li>{tweet.content}</li>\n          })}\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <h1>Hola</h1>\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}