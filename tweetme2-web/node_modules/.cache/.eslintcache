[{"C:\\projects\\webpages\\dev\\tweetme2-web\\src\\index.js":"1","C:\\projects\\webpages\\dev\\tweetme2-web\\src\\App.js":"2","C:\\projects\\webpages\\dev\\tweetme2-web\\src\\reportWebVitals.js":"3","C:\\projects\\webpages\\dev\\tweetme2-web\\src\\tweets\\index.js":"4","C:\\projects\\webpages\\dev\\tweetme2-web\\src\\tweets\\components.js":"5","C:\\projects\\webpages\\dev\\tweetme2-web\\src\\lookup\\index.js":"6","C:\\projects\\webpages\\dev\\tweetme2-web\\src\\lookup\\components.js":"7"},{"size":668,"mtime":1624370992200,"results":"8","hashOfConfig":"9"},{"size":634,"mtime":1624370992200,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1624370992200,"results":"11","hashOfConfig":"9"},{"size":153,"mtime":1624370992200,"results":"12","hashOfConfig":"9"},{"size":3576,"mtime":1624384946541,"results":"13","hashOfConfig":"9"},{"size":102,"mtime":1624382442856,"results":"14","hashOfConfig":"9"},{"size":1593,"mtime":1624384647941,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gbrjs6",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\webpages\\dev\\tweetme2-web\\src\\index.js",[],"C:\\projects\\webpages\\dev\\tweetme2-web\\src\\App.js",["33","34"],"import React, {\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {TweetsComponent} from './tweets'\r\n\r\nfunction App() {\r\n  \r\n\r\n  return ( \r\n    <div className =\"App\">\r\n    <header className=\"App-header\">\r\n    <img src={logo} className=\"App-logo\" alt = \"logo\" />\r\n    <p>\r\n      Edit <code>src/App.js</code> and save to reload. \r\n    </p> \r\n    <div className=\"container\">\r\n      {<TweetsComponent />}\r\n    </div>\r\n    <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\"  rel=\"noopener noreferrer\">\r\n    \r\n    </a > </header> </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\projects\\webpages\\dev\\tweetme2-web\\src\\reportWebVitals.js",[],"C:\\projects\\webpages\\dev\\tweetme2-web\\src\\tweets\\index.js",[],"C:\\projects\\webpages\\dev\\tweetme2-web\\src\\tweets\\components.js",["35"],"import React, {useEffect, useState} from 'react'\r\nimport {createTweet, loadTweets} from '../lookup'\r\n\r\nexport function TweetsComponent(props){\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const handleSubmit = (event) =>{\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      let tempNewTweets = [...newTweets]\r\n      createTweet(newVal, (response, status)=>{\r\n        if(status===201){\r\n          tempNewTweets.unshift(response)\r\n        } else {\r\n          console.log(response)\r\n          alert(\"An error occured please try again1\")\r\n        }\r\n      })\r\n      \r\n      setNewTweets(tempNewTweets)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n      <div className='col-12 mb-3'>\r\n        <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n              \r\n            </textarea>\r\n            <button type='submit' className=\"btn btn-primary my-3\">Tweet</button>\r\n          </form>\r\n        </div>\r\n      <TweetList newTweets={newTweets}/>\r\n      </div>\r\n}\r\n\r\nexport function TweetList(props){\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() =>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length){\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if(tweetsDidSet===false){\r\n        const myCallback = (response, status) => {\r\n          if (status === 200) {\r\n            \r\n            setTweetsInit(response)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        loadTweets(myCallback)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet])\r\n    return tweets.map((item, index) => {\r\n        return <Tweet tweet={item} className=\"my-5 py-5 border bg-white text-dark\" key={index} />\r\n    })\r\n}\r\n            \r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action} = props\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm';\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    \r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      if(action.type === 'like'){\r\n        if(userLike === true){\r\n          setLikes(likes - 1)\r\n          setUserLike(false)\r\n        } else {\r\n          setLikes(tweet.likes + 1)\r\n          setUserLike(true)\r\n        }\r\n        \r\n      }\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }\r\n  \r\nexport function Tweet(props) {\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\r\n    return <div className ={className} >\r\n      <p>{tweet.id } - {tweet.content} </p>\r\n      <div className=\"btn btn-group\">\r\n        <ActionBtn tweet={tweet} action={{type: \"like\", display: \"Likes\"}}/>\r\n        <ActionBtn tweet={tweet} action={{type: \"unlike\", display: \"Unlike\"}}/>\r\n        <ActionBtn tweet={tweet} action={{type: \"unlike\", display: \"Retweet\"}}/>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n","C:\\projects\\webpages\\dev\\tweetme2-web\\src\\lookup\\index.js",[],["36","37"],"C:\\projects\\webpages\\dev\\tweetme2-web\\src\\lookup\\components.js",[],{"ruleId":"38","severity":1,"message":"39","line":2,"column":3,"nodeType":"40","messageId":"41","endLine":2,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":3,"column":3,"nodeType":"40","messageId":"41","endLine":3,"endColumn":11},{"ruleId":"43","severity":1,"message":"44","line":45,"column":8,"nodeType":"45","endLine":45,"endColumn":37,"suggestions":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tweets.length'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-native-reassign",["52"],"no-negated-in-lhs",["53"],{"desc":"54","fix":"55"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props.newTweets, tweets.length, tweetsInit]",{"range":"56","text":"57"},[1535,1564],"[props.newTweets, tweets.length, tweetsInit]"]